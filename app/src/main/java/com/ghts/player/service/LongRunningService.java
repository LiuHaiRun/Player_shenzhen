package com.ghts.player.service;import android.app.AlarmManager;import android.app.PendingIntent;import android.app.Service;import android.content.Context;import android.content.Intent;import android.os.IBinder;import android.os.SystemClock;import android.text.format.Time;import com.ghts.player.utils.Const;import com.ghts.player.utils.LogUtil;import java.util.Calendar;import java.util.TimeZone;import static com.ghts.player.activity.PlayerActivity.context;/** * Created by lijingjing on 17-9-26. */public class LongRunningService extends Service {    AlarmManager am = null;    @Override    public IBinder onBind(Intent intent) {        return null;    }    @Override    public int onStartCommand(Intent intent, int flags, int startId) {        //获取定时任务管理器对象         am = (AlarmManager) context.getApplicationContext().getSystemService(Context.ALARM_SERVICE);        //        try {        //            ArrayList<TaskBean> taskBeanArrayList = new ArrayList<TaskBean>();        //            taskBeanArrayList.clear();        //            taskBeanArrayList = Const.parseXml.getTask();        //            if (taskBeanArrayList != null && taskBeanArrayList.size() > 0) {        //                for (int i = 0; i < taskBeanArrayList.size(); i++) {        //                    TaskBean taskBean = taskBeanArrayList.get(i);        //                    if (taskBean.getContent().equals("2")) {        //判断配置文件中的时间不为空时        if (Const.globalBean.getOpenScreenTime() != null) {            Time time = Const.globalBean.getOpenScreenTime();            LogUtil.e("#####重启时间######", time.hour + ":" + time.minute + ":" + time.second);            setTime(time);        }        if (Const.globalBean.getOpenScreenTime() != null) {            Time time = Const.globalBean.getOpenScreenTime();            LogUtil.e("#####开屏时间######", time.hour + ":" + time.minute + ":" + time.second);//            setOpenScreen(time);        }        if (Const.globalBean.getCloseScreenTime() != null) {            Time time = Const.globalBean.getCloseScreenTime();            LogUtil.e("#####关屏时间######", time.hour + ":" + time.minute + ":" + time.second);//            setCloseScreen(time);        }        //                    }        //                    if (taskBean.getContent().equals("3")) {        //                        Time time = taskBean.getTime();        //                        LogUtil.e("#####开屏时间######",time.hour+":"+time.minute+":"+time.second);        //                        setOpenScreen(time);        //                    }        //                    if (taskBean.getContent().equals("4")) {        //                        Time time = taskBean.getTime();        //                        LogUtil.e("#####关屏时间######",time.hour+":"+time.minute+":"+time.second);        //                        setCloseScreen(time);        //                    }        //                }        //            }        //        } catch (Exception e) {        //            e.printStackTrace();        //        }        return super.onStartCommand(intent, flags, startId);    }    public void setTime(Time mTime) {        Intent intent = new Intent(this, AlarmReceiver.class);        intent.setAction("PLAYER_REBOOT");        PendingIntent sender = PendingIntent.getBroadcast(this, 333333333, intent, 0);        long firstTime = SystemClock.elapsedRealtime();    // 开机之后到现在的运行时间(包括睡眠时间)        long systemTime = System.currentTimeMillis(); //获取绝对时间        Calendar calendar = Calendar.getInstance();   //获取日历        calendar.setTimeInMillis(System.currentTimeMillis());        // 这里时区需要设置一下，不然会有8个小时的时间差        calendar.setTimeZone(TimeZone.getTimeZone("GMT+8"));        calendar.set(Calendar.HOUR_OF_DAY, mTime.hour);        calendar.set(Calendar.MINUTE, mTime.minute);        calendar.set(Calendar.SECOND, mTime.second);        calendar.set(Calendar.MILLISECOND, 0);        calendar.add(Calendar.MINUTE, -5);         // 选择的定时时间        long selectTime = calendar.getTimeInMillis();        // 如果当前时间大于设置的时间，那么就从第二天的设定时间开始        if (systemTime > selectTime) {            calendar.add(Calendar.DAY_OF_MONTH, 1);            selectTime = calendar.getTimeInMillis();        }        // 计算现在时间到设定时间的时间差        long time = selectTime - systemTime;        firstTime += time;        LogUtil.e("#######重启"+selectTime+"--"+firstTime,calendar.getTime().getHours()+"-"+calendar.getTime().getMinutes()+"-"+calendar.getTime().getSeconds());        // 进行闹铃注册//        am.setRepeating(AlarmManager.ELAPSED_REALTIME_WAKEUP,//                firstTime, AlarmManager.INTERVAL_DAY, sender);        am.setExact(AlarmManager.RTC,selectTime,sender);//        am.setWindow(AlarmManager.ELAPSED_REALTIME_WAKEUP, firstTime, 100, sender);    }//    public void setOpenScreen(Time mTime) {//        Intent intent = new Intent(this, OpenScreenReceiver.class);//        PendingIntent sender = PendingIntent.getBroadcast(this, 22222222, intent, 0);//        long firstTime = SystemClock.elapsedRealtime();    // 开机之后到现在的运行时间(包括睡眠时间)//        long systemTime = System.currentTimeMillis();//        Calendar calendar = Calendar.getInstance();//        calendar.setTimeInMillis(System.currentTimeMillis());//        // 这里时区需要设置一下，不然会有8个小时的时间差//        calendar.setTimeZone(TimeZone.getTimeZone("GMT+8"));//        calendar.set(Calendar.MINUTE, mTime.minute);//        calendar.set(Calendar.HOUR_OF_DAY, mTime.hour);//        calendar.set(Calendar.SECOND, mTime.second);//        calendar.set(Calendar.MILLISECOND, 0);////        // 选择的定时时间//        long selectTime = calendar.getTimeInMillis();//        // 如果当前时间大于设置的时间，那么就从第二天的设定时间开始//        if (systemTime > selectTime) {//            calendar.add(Calendar.DAY_OF_MONTH, 1);//            selectTime = calendar.getTimeInMillis();//        }//        // 计算现在时间到设定时间的时间差//        long time = selectTime - systemTime;//        firstTime += time;//        LogUtil.e("#######开屏"+selectTime+"--"+firstTime,calendar.getTime().getHours()+"-"+calendar.getTime().getMinutes()+"-"+calendar.getTime().getSeconds());//        // 进行闹铃注册////        am.setRepeating(AlarmManager.ELAPSED_REALTIME_WAKEUP,////                firstTime, AlarmManager.INTERVAL_DAY, sender);////        am.setWindow(AlarmManager.ELAPSED_REALTIME_WAKEUP, firstTime, 100, sender);//        am.setExact(AlarmManager.RTC,selectTime,sender);//    }//    public void setCloseScreen(Time mTime) {////        Intent intent = new Intent(this, CloseScreenReceiver.class);//        PendingIntent sender = PendingIntent.getBroadcast(this, 11111111, intent, 0);//        long firstTime = SystemClock.elapsedRealtime();    // 开机之后到现在的运行时间(包括睡眠时间)//        long systemTime = System.currentTimeMillis();//        Calendar calendar = Calendar.getInstance();//        calendar.setTimeInMillis(System.currentTimeMillis());//        // 这里时区需要设置一下，不然会有8个小时的时间差//        calendar.setTimeZone(TimeZone.getTimeZone("GMT+8"));//        calendar.set(Calendar.MINUTE, mTime.minute);//        calendar.set(Calendar.HOUR_OF_DAY, mTime.hour);//        calendar.set(Calendar.SECOND, mTime.second);//        calendar.set(Calendar.MILLISECOND, 0);//        // 选择的定时时间//        long selectTime = calendar.getTimeInMillis();//        // 如果当前时间大于设置的时间，那么就从第二天的设定时间开始//        if (systemTime > selectTime) {//            calendar.add(Calendar.DAY_OF_MONTH, 1);//            selectTime = calendar.getTimeInMillis();//        }//        // 计算现在时间到设定时间的时间差//        long time = selectTime - systemTime;//        firstTime += time;//        // 进行闹铃注册////        am.setRepeating(AlarmManager.ELAPSED_REALTIME_WAKEUP,////                firstTime, AlarmManager.INTERVAL_DAY, sender);////        am.setWindow(AlarmManager.ELAPSED_REALTIME_WAKEUP, firstTime, 100, sender);//        am.setExact(AlarmManager.RTC,selectTime,sender);//    }    @Override    public void onDestroy() {        super.onDestroy();        Intent intent = new Intent(this, AlarmReceiver.class);        PendingIntent sender = PendingIntent.getBroadcast(this, 333333333, intent, 0);        am.cancel(sender);//        Intent intent2 = new Intent(this, OpenScreenReceiver.class);//        PendingIntent sender2 = PendingIntent.getBroadcast(this, 22222222, intent2, 0);//        am.cancel(sender2);////        Intent intent3 = new Intent(this, CloseScreenReceiver.class);//        PendingIntent sender3 = PendingIntent.getBroadcast(this, 11111111, intent3, 0);//        am.cancel(sender3);//        Log.e("取消闹钟服务", "取消闹钟服务");    }//    private static long getMinute5Time(){//        Calendar minute5Start = Calendar.getInstance();//        Date nowDate = new Date();//        minute5Start.setTime(nowDate);//        minute5Start.add(Calendar.MINUTE, -5);//        String minute5Str = sdf.format(minute5Start.getTime());//        Date minute5Date = null;//        try {//            minute5Date = sdf.parse(minute5Str);//        } catch (ParseException e) {//            e.printStackTrace();//        }//        long minute5Time = minute5Date.getTime();//        return minute5Time;//    }}